Notes.txt
==================================================
Done : 
1. Dumping flows of a switch on mininet: sh ovs-ofctl dump-flows s1
2. msg.match.dl_type = ethernet.IP_TYPE : Needed to set to check IP.
3. Use VLAN ID as tenant ID + RouteTags -> Needs to be added at first switch of route and stripped at last switch of route.
4. To send packet back input port, needed to use OFFP_IN_PORT

Not Able to add tunnels, try out an alternate approach.
5. Cannot use DST MAC address as tunnel destination, (before host needs to be modified.) So, using source MAC address as tunnel.



13 Feb : 
1. NSX reproduces in software the entire networking environment, including L2, L3 and L4–L7 network services within each virtual network. NSX offers a distributed logical architecture for L2–L7 services, provisioning them programmatically when virtual machines are deployed and moving them with the virtual machines,

2. The VND paper does not use virtual routers for its abstraction. Since it is more of a trace collection program, it does not 
require the need of instantiation of a virtual router/switch.

----
Building a network Testing tool?

->For conventional networks : 
Trouble points are routers (switches do not induce issues in the network) due to configuration, etc. 
So, we can consider L3 topologies. 

->For SDN networks : 
SDNs do not have different switches and routers (can be performed by a common entity). 
We can deploy virtual switches on the physical hardware and have a controller for the OVS. This way, we can 
test multiple SDNs as well.

----Notes
Plan of Action:
1. Physical topology creation - Done.
2. Virtual Network Specification.
3. Mapping to Physical Network.
4. Controller program to install rules for correct forwarding. 
	--> First Step : Simple connectivity between entities. In this, I will treat vRouters as hosts for simplicity.




Todo:
1. ARP Packet Handling! 
2.


Depth 10 Phy Tree.

Depth = 2
Physical Topology Initialize Timing 0.0126330852509
Virtual Topology mapper Timing 0.0580580234528
NetworkMapping Timing 0.0998578071594

Depth = 4
Physical Topology Initialize Timing 0.0133459568024
Virtual Topology mapper Timing 0.0652408599854
NetworkMapping Timing 6.85209679604

Depth = 6
Physical Topology Initialize Timing 0.0118291378021
Virtual Topology mapper Timing 0.0583438873291
NetworkMapping Timing 7.15825581551

Depth = 8
Physical Topology Initialize Timing 0.0137639045715
Virtual Topology mapper Timing 0.0579090118408
NetworkMapping Timing 6.97599101067



Ring = 250
Physical Topology Initialize Timing 0.0143539905548
Virtual Topology mapper Timing 0.0655620098114
NetworkMapping Timing 4.43306612968

Ring = 500
Physical Topology Initialize Timing 0.0122721195221
Virtual Topology mapper Timing 0.065545797348
NetworkMapping Timing 4.76353907585

Ring - 750
Physical Topology Initialize Timing 0.0149240493774
Virtual Topology mapper Timing 0.0684578418732
NetworkMapping Timing 5.30993199348

Ring = 1000
Physical Topology Initialize Timing 0.0175609588623
Virtual Topology mapper Timing 0.0685470104218
NetworkMapping Timing 6.21117019653


